.\" Automatically generated by Podwrapper::Man 1.44.1 (Pod::Simple 3.41)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "guestfs-release-notes-1.8 1"
.TH guestfs-release-notes-1.8 1 "2021-04-03" "libguestfs-1.44.1" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "名前"
.IX Header "名前"
guestfs-release-notes \- libguestfs リリースノート
.SH "RELEASE NOTES FOR LIBGUESTFS 1.8"
.IX Header "RELEASE NOTES FOR LIBGUESTFS 1.8"
These release notes only cover the differences from the previous stable/dev
branch split (1.6.0).  For detailed changelogs, please see the git
repository, or the ChangeLog file distributed in the tarball.
.SS "New features"
.IX Subsection "New features"
.Vb 1
\& \- Support and packages for Debian and Ubuntu.
\&
\& \- Daily builds from git repository on Debian and Ubuntu to reduce risk
\&   of regressions.
\&
\& \- Port to ArchLinux \*(Aqpacman\*(Aq (thanks Thomas S Hatch).
\&
\& \- The following tools have been rewritten in C (originally in Perl):
\&
\&     . virt\-cat
\&     . virt\-df
\&     . virt\-inspector
\&     . virt\-ls
\&     . virt\-rescue
\&
\& \- Some C tools support encrypted guests automatically.  This is
\&   supported in: guestfish, guestmount, virt\-cat, virt\-inspector,
\&   virt\-ls.
\&
\& \- New tool virt\-filesystems (in C) which is a replacement for
\&   virt\-list\-filesystems and virt\-list\-partitions, and has a superset
\&   of the functionality of those tools.
\&
\& \- guestfish, guestmount and the C tools use unified command line option
\&   parsing, so they support many common options such as \*(Aq\-a disk.img\*(Aq,
\&   \*(Aq\-d libvirt\-domain\*(Aq, \*(Aq\-x\*(Aq, \*(Aq\-v\*(Aq.  The old command line option
\&   parsing is preserved for compatibility in scripts etc.
\&
\& \- guestfish no longer has any dependencies on Perl
\&
\& \- New man pages containing programming examples: guestfs\-examples(3) (C/C++),
\&   guestfs\-ocaml(3), guestfs\-python(3), guestfs\-ruby(3).
\&
\& \- Trace mode prints return values from API functions.
\&
\& \- virt\-inspector can list applications installed in Windows guests, along
\&   with a great deal of information about those applications.
\&
\& \- Add support for inspecting: Linux Mint, Mandriva, FreeBSD.
\&
\& \- guestfish \-\-rw option (with no effect currently) to make potentially
\&   dangerous write access explicit.
\&
\& \- guestfish \-\-listen \-\-csh for compatibility with csh, tcsh (thanks
\&   Eric Blake).
\&
\& \- The first upstream version that introduced each API function is now
\&   documented in guestfs(3).
\&
\& \- guestfs_last_errno allows you to retrieve the errno from the
\&   daemon, correctly translated to the local operating system.
\&
\& \- Functions can now have optional parameters.
\&
\& \- Progress bars and progress notifications can now happen for upload
\&   commands.
\&
\& \- Appliance builder more careful about not leaving temporary files
\&   around in /tmp.
\&
\& \- getfattr/setfattr commands added to virt\-rescue.
\&
\& \- ROADMAP file covers roadmap and goals for future releases.
.Ve
.SS "Security"
.IX Subsection "Security"
.Vb 1
\& \- New SECURITY section in guestfs(3) API documentation.
\&
\& \- virt\-inspector no longer runs any guest commands.
\&
\& \- Inspection code is more careful about avoiding very large files
\&   from guests which might previously have caused a denial of service.
\&
\& \- FUSE calls into guestmount are now traced when using guestmount \-x.
.Ve
.SS "New APIs"
.IX Subsection "New APIs"
.Vb 10
\& \- add\-domain
\& \- add\-drive\-opts
\& \- getxattr
\& \- inspect\-get\-hostname
\& \- inspect\-get\-package\-format
\& \- inspect\-get\-package\-management
\& \- inspect\-get\-roots
\& \- inspect\-list\-applications
\& \- lgetxattr
\& \- mkfs\-opts
.Ve
.SS "内部"
.IX Subsection "内部"
.Vb 1
\& \- C programs now only link precisely with the libraries that they use.
\&
\& \- PCRE, libmagic, hivex and libvirt libraries are now completely
\&   optional for building.
\&
\& \- Multiple memory leaks and file descriptor leaks fixed.
\&
\& \- Add a POD wrapper to unify generation of man pages and HTML files
\&   across all programs.
\&
\& \- Source includes phony images of Fedora, Debian, Ubuntu and
\&   Windows guests.
\&
\& \- Ruby bindings have \*(Aqmake install\*(Aq rule.
\&
\& \- <guestfs.h> is now a single file.
\&
\& \- <guestfs.h> does not require XDR headers.
\&
\& \- ocaml xml\-light library is no longer required to build (thanks
\&   Maxim Koltsov).
\&
\& \- ./configure \-\-disable\-[...] for each language binding (thanks
\&   Maxim Koltsov).
\&
\& \- Old ocaml\-viewer program removed (use guestfs\-browser instead).
\&
\& \- New C API test type \*(AqInitScratchFS\*(Aq makes the tests run a little
\&   more quickly.
\&
\& \- Excluded packages in the appliance are now listed in a separate
\&   file appliance/excludelist.in, and can be customized per\-distro.
.Ve
.SS "バグ修正"
.IX Subsection "バグ修正"
.Vb 6
\& \- 663407 readlink and readlinklist returns /sysroot/ in some paths
\& \- 661280 virt\-rescue: panic when shutting down: "/sbin/reboot: No such file or directory"
\& \- 657499 checksum: wrong check sum type causes umount to fail
\& \- 655554 Whole disk paths are not made canonical by virt\-inspector
\& \- 654638 openssl updated to 1.0.0b libguestfs depends on exact file names
\& \- 652796 ruby bindings not installed by \*(Aqmake install\*(Aq, hence omitted from the binary distribution
.Ve
.SH "関連項目"
.IX Header "関連項目"
\&\fBguestfs\-examples\fR\|(1), \fBguestfs\-faq\fR\|(1), \fBguestfs\-performance\fR\|(1),
\&\fBguestfs\-recipes\fR\|(1), \fBguestfs\-testing\fR\|(1), \fBguestfs\fR\|(3),
\&\fBguestfish\fR\|(1), http://libguestfs.org/
.SH "著者"
.IX Header "著者"
Richard W.M. Jones
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2009\-2020 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fBlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
